!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){var r=n(6),i=n(7),o=n(8),a=n(9);e.exports=function(e){return r(e)||i(e)||o(e)||a()}},function(e,t,n){"use strict";(function(e){n.d(t,"d",(function(){return o})),n.d(t,"c",(function(){return s})),n.d(t,"b",(function(){return u})),n.d(t,"a",(function(){return l}));var r=n(2);function i(e){return Object.assign({},e,{timestamp:Date.now()})}var o=r.a;function a(e){return e||"the Human"}function c(e,t,n,r){var i=parseInt(e),o=parseInt(t),c=a(n);return(i=i||0)>(o=o||0)?"This dino is ".concat(i-o," ").concat(r.unit," ").concat(r.up," than ").concat(c):i>r.unit?"We have a Super Human!":"This dino is ".concat(o-i," ").concat(r.unit," ").concat(r.down," than ").concat(c)}function s(e,t,n){return c(e,t,n,{up:"weighter",down:"lighter",unit:"lbs",maxValueForHuman:1400})}function u(e,t,n){return c(e,parseInt(t.feet)+parseInt(t.inches)/12,n,{up:"taller",down:"smaller",unit:"feet",maxValueForHuman:9})}function l(e,t,n){var r=e.trim().toLowerCase(),i=t.trim().toLowerCase();return r===i?"Woohoo! Both are ".concat(r):"This dino is ".concat(r," and ").concat(a(n)," is ").concat(i)}r.a.map((function(t){e[t.species]=new i(t)}))}).call(this,n(12))},function(e){e.exports=JSON.parse('{"a":[{"species":"Triceratops","weight":13000,"height":114,"diet":"herbavor","where":"North America","when":"Late Cretaceous","fact":"First discovered in 1889 by Othniel Charles Marsh"},{"species":"Tyrannosaurus Rex","weight":11905,"height":144,"diet":"carnivor","where":"North America","when":"Late Cretaceous","fact":"The largest known skull measures in at 5 feet long"},{"species":"Anklyosaurus","weight":10500,"height":55,"diet":"herbavor","where":"North America","when":"Late Cretaceous","fact":"Anklyosaurus survived for approximately 135 million years"},{"species":"Brachiosaurus","weight":70000,"height":"372","diet":"herbavor","where":"North America","when":"Late Jurasic","fact":"An asteroid was named 9954 Brachiosaurus in 1991"},{"species":"Stegosaurus","weight":11600,"height":79,"diet":"herbavor","where":"North America, Europe, Asia","when":"Late Jurasic to Early Cretaceous","fact":"The Stegosaurus had between 17 and 22 seperate places and flat spines"},{"species":"Elasmosaurus","weight":16000,"height":59,"diet":"carnivor","where":"North America","when":"Late Cretaceous","fact":"Elasmosaurus was a marine reptile first discovered in Kansas"},{"species":"Pteranodon","weight":44,"height":20,"diet":"carnivor","where":"North America","when":"Late Cretaceous","fact":"Actually a flying reptile, the Pteranodon is not a dinosaur"},{"species":"Pigeon","weight":0.5,"height":9,"diet":"herbavor","where":"World Wide","when":"Holocene","fact":"All birds are living dinosaurs"}]}')},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}},function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){e.exports=n(13)},function(e,t,n){var r=n(3);e.exports=function(e){if(Array.isArray(e))return r(e)}},function(e,t){e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},function(e,t,n){var r=n(3);e.exports=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},function(e,t,n){},function(e,t){e.exports='<!doctype html> <html lang=en> <head> <meta charset=UTF-8 /> <meta name=viewport content="width=device-width,initial-scale=1"/> <meta http-equiv=X-UA-Compatible content="ie=edge"/> <title>Dinographic</title> <link href="https://fonts.googleapis.com/css?family=Frijole|Open+Sans|Oswald&display=swap" rel=stylesheet /> <link href=https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css rel=stylesheet /> </head> <body> <header> <h2>Natural History Museum</h2> <h1>Dinosaurs</h1> <h3>How do you compare?</h3> </header> <form id=dino-compare> <div class=form-container> <div id=container> <p>Name:</p> <input id=name class=form-field__full type=name name=name /> <p>Height</p> <label>Feet: <input id=feet class=form-field__short type=number name=feet /></label> <label>inches: <input id=inches class=form-field__short type=number name=inches /></label> <p>Weight:</p> <label><input id=weight class=form-field__full type=number name=weight />lbs</label> <p>Diet:</p> <select id=diet class=form-field__full name=diet> <option>Herbavor</option> <option>Omnivor</option> <option>Carnivor</option> </select> <div class="btn compare">Compare Me!</div> </div> </div> </form> <main id=grid></main> <footer> <p class=fine-print> Data Sourced from <a href=https://www.wikipedia.org/ >Wikipedia.org</a>, all numbers are approximations. </p> </footer> </body> </html> '},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),o=n(1),a=n(4),c=n.n(a);function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){var t=e.name,n=e.height,r=e.weight,i=e.diet;this.species="Human",this.name=t,this.height=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){c()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},n),this.weight=r,this.diet=i}function l(e,t){return Math.floor(Math.random()*(t-e+1))+e}function h(e,t){var n=function(e){var t,n;return e.map((function(e,r){"pigeon"===e.species.trim().toLowerCase()&&(n=r),"human"===e.species.trim().toLowerCase()&&(t=r)})),{bird:n,human:t}}(e);n=Object.values(n);for(var r=Math.ceil(7/t),i=7%t,o=[],a=1;a<=r;a++){for(var c=(a-1)*t,s=a===r?c+i:c+(t-1),u=l(c,s);1===n.indexOf(u);)u=l(c,s);o.push(u)}return o}function p(e,t){document.querySelector("#".concat(t)).classList.remove("hide");var n=document.querySelector(".".concat(e));n.removeEventListener("click",p,!1),n.remove(),document.querySelector("#grid").innerHTML=""}function d(e,t,n,r,o){var a,c,s=o.element,u=o.text,l=o.classes;document.querySelector("#".concat(n)).classList.add("hide"),document.querySelector("#".concat(r)).innerHTML=(a="",c="",t.map((function(e){c="human"!==e.species.toLowerCase()||e.name?e.name:"Human",a+="<div class='grid-item'><h3>".concat("human"!==e.species.toLowerCase()?e.species:c,"</h3><img src='images/").concat(e.species.trim().toLowerCase(),".png'>\n    <p>").concat("human"!==e.species.toLowerCase()?e.fact:"","</p>\n    </div>")})),a),function(e,t,n,r,o,a){var c,s=document.createElement(e),u=document.createTextNode(t);s.appendChild(u),(c=s.classList).add.apply(c,i()(n)),document.querySelector("#".concat(r)).appendChild(s),s.addEventListener("click",(function(){p(n[n.length-1],o)}))}(s,u,l,r,n)}n.p,n.p,n.p,n.p,n.p,n.p,n.p,n.p,n.p;n(10),n(11),document.querySelector(".compare").addEventListener("click",(function(){var e=new u({name:document.querySelector("#name").value,height:{feet:document.querySelector("#feet").value,inches:document.querySelector("#inches").value},weight:document.querySelector("#weight").value,diet:document.querySelector("#diet").value}),t=function(e,t){var n=Math.floor(e.length/2),r=[].concat(i()(e.slice(0,n)),[t],i()(e.slice(n)));return r.map((function(e){"pigeon"===e.species.trim().toLowerCase()&&(e.fact="All birds are Dinosaurs")})),r}(o.d,e);i()(t);h(t,3);var n=h(t,3);d(0,function(e,t,n){for(var r=e.map((function(e){return Object.assign({},e)})),i=0;i<t.length;i++)r[t[i]].fact="".concat(n[i]);return r}(t,n,[Object(o.c)(t[n[0]].weight,e.weight,e.name),Object(o.b)(t[n[1]].height,e.height,e.name),Object(o.a)(t[n[2]].diet,e.diet,e.name)]),"dino-compare","grid",{element:"div",text:"Back!",classes:["btn","goBack"]})}))}]);